name: ReBuild Build

on:
  workflow_call:
    inputs:
      from_ci:
        type: boolean
        required: false
        default: true

  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Run build
        run: |
          if [ -f "config.json" ]; then
            ./build.sh config.json
          else
            ./build.sh config.toml
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rebuild-build-artifacts
          path: build/**

      - name: Read changelog
        id: changelog
        run: |
          if [ -f build.md ]; then
            # Safely pass multiline/complex changelog via the GITHUB_OUTPUT file
            body=$(cat build.md)
            printf 'body<<EOF\n%s\nEOF\n' "$body" >> "$GITHUB_OUTPUT"
          else
            echo "body=Build artifacts" >> "$GITHUB_OUTPUT"
          fi

      - name: Remove zip and tar.gz from release assets
        run: |
          # Prevent uploading generated source archives to the GitHub Release
          if [ -d build ]; then
            find build -type f \( -name '*.zip' -o -name '*.tar.gz' \) -print -delete || true
          fi

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_number }}
          name: ReBuild Build ${{ github.run_number }}
          body: ${{ steps.changelog.outputs.body }}
          files: build/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
